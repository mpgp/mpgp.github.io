{
  "messages":[{
    "icon":"account_circle",
    "name":"Account",
    "description":"The basic operations with an account.",
    "examples":[{
      "verb":"GET",
      "name":"/api/account/{accountId}",
      "summary":"Get account info.",
      "description":"",
      "fields":[],
      "clientMessage":"GET /api/acoount/1",
      "serverMessage":{
        "success":{
          "status":200,
          "description":"Returns the account info.",
          "data":{
            "accountId":1,
            "avatar":"29.jpg",
            "languages":"EN, RU",
            "lastOnline": "2018-04-04T00:00:00",
            "nickname": "AlexAnder",
            "registerDate": "2018-01-01T00:00:00",
            "statusInfo": "Life begins at the end of your comfort zone."
          }
        },
        "errors":[{
          "status":404,
          "description":"If the account was not found.",
          "data":{
            "errorCode": 404,
            "message": "NotFound"
          }
        }]
      }
    },{
      "verb":"POST",
      "name":"/api/account",
      "summary":"Authorize a exists account.",
      "description":"Before authorized you must register an account.",
      "fields":[{
        "name":"login",
        "type":"string",
        "description":"",
        "required":true,
        "validators":[
          {"name":"maxLength","value":20},
          {"name":"minLength","value":3},
          {"name":"pattern","value":"^[a-zA-Z0-9]+$"}
        ]
      },{
        "name":"password",
        "type":"string",
        "description":"",
        "required":true,
        "validators":[
          {"name":"maxLength","value":249},
          {"name":"minLength","value":8}
        ]
      }],
      "clientMessage":{
        "login": "admin2018",
        "password": "12345678asdf"
      },
      "serverMessage":{
        "success":{
          "status":200,
          "description":"Returns the authtoken of registered account.",
          "data":{
            "authToken":"392c2a901720d24e26be260ec331632f"
          }
        },
        "errors":[{
          "status":400,
          "description":"If the model is invalid.",
          "data":{
            "errorCode": 1,
            "message": "Field XXX is required"
          }
        },{
          "status":404,
          "description":"If the account was not found.",
          "data":{
            "errorCode": 404,
            "message": "NotFound"
          }
        }]
      }
    },{
      "verb":"PUT",
      "name":"/api/account",
      "summary":"Register a new account.",
      "description":"",
      "fields":[{
        "name":"avatar",
        "type":"string",
        "description":"",
        "required":false,
        "validators":[
          {"name":"maxLength","value":249}
        ]
      },{
        "name":"languages",
        "type":"string",
        "description":"",
        "required":false,
        "validators":[
          {"name":"maxLength","value":249}
        ]
      },{
        "name":"login",
        "type":"string",
        "description":"",
        "required":true,
        "validators":[
          {"name":"maxLength","value":20},
          {"name":"minLength","value":3},
          {"name":"pattern","value":"^[a-zA-Z0-9]+$"}
        ]
      },{
        "name":"nickname",
        "type":"string",
        "description":"",
        "required":false,
        "validators":[
          {"name":"maxLength","value":20},
          {"name":"minLength","value":3},
          {"name":"pattern","value":"^([^\\s]+?\\s?[^\\s]+?)+?$"}
        ]
      },{
        "name":"password",
        "type":"string",
        "description":"",
        "required":true,
        "validators":[
          {"name":"maxLength","value":249},
          {"name":"minLength","value":8}
        ]
      },{
        "name":"passwordRepeat",
        "type":"string",
        "description":"",
        "required":true,
        "validators":[
          {"name":"maxLength","value":249},
          {"name":"minLength","value":8}
        ]
      },{
        "name":"statusInfo",
        "type":"string",
        "description":"",
        "required":false,
        "validators":[
          {"name":"maxLength","value":249}
        ]
      }],
      "clientMessage":{
        "login": "admin2018",
        "nickname": "AlexAnder",
        "password": "12345678asdf",
        "passwordRepeat": "12345678asdf"
      },
      "serverMessage":{
        "success":{
          "status":201,
          "description":"Returns the authtoken of newly registered account.",
          "data":{
            "authToken":"392c2a901720d24e26be260ec331632f"
          }
        },
        "errors":[{
          "status":400,
          "description":"If the model is invalid.",
          "data":{
            "errorCode": 1,
            "message": "Field XXX is required"
          }
        },{
          "status":409,
          "description":"If the account was not found.",
          "data":{
            "errorCode": 409,
            "message": "Conflict"
          }
        }]
      }
    },{
      "verb":"PATCH",
      "name":"/api/account",
      "summary":"Validate a token of exists account.",
      "description":"Checks an auth token and returns status 200 if success else returns 404.",
      "fields":[{
        "name":"authToken",
        "type":"string",
        "description":"",
        "required":true,
        "validators":[
          {"name":"maxLength","value":64}
        ]
      }],
      "clientMessage":{
        "login": "admin2018",
        "password": "12345678asdf"
      },
      "serverMessage":{
        "success":{
          "status":200,
          "description":"If the token is valid.",
          "data":null
        },
        "errors":[{
          "status":404,
          "description":"If the token was not found.",
          "data":{
            "errorCode": 404,
            "message": "NotFound"
          }
        }]
      }
    }]
  },{
    "icon":"settings",
    "name":"Manage",
    "description":"The advanced operations to manage your account. With this actions you can update your profile, change password, etc...",
    "examples":[{
      "verb":"POST",
      "name":"/api/manage",
      "summary":"Change a password for your account.",
      "description":"So soon...",
      "fields":[],
      "clientMessage":{},
      "serverMessage":{
        "success":{},
        "errors":[]
      }
    },{
      "verb":"DELETE",
      "name":"/api/manage",
      "summary":"Delete an your account.",
      "description":"So soon...",
      "fields":[],
      "clientMessage":{},
      "serverMessage":{
        "success":{},
        "errors":[]
      }
    }]
  },{
    "icon":"message",
    "name":"UserWall",
    "description":"The operations with an user wall.",
    "examples":[{
      "verb":"GET",
      "name":"/api/userwall/{userWallId}",
      "summary":"Get a specific wall post by id.",
      "description":"So soon...",
      "fields":[],
      "clientMessage":{},
      "serverMessage":{
        "success":{},
        "errors":[]
      }
    },{
      "verb":"POST",
      "name":"/api/userwall/",
      "summary":"Get a list of posts for specific user.",
      "description":"So soon...",
      "fields":[],
      "clientMessage":{},
      "serverMessage":{
        "success":{},
        "errors":[]
      }
    },{
      "verb":"PATCH",
      "name":"/api/userwall/",
      "summary":"Update a specific post.",
      "description":"So soon...",
      "fields":[],
      "clientMessage":{},
      "serverMessage":{
        "success":{},
        "errors":[]
      }
    },{
      "verb":"PUT",
      "name":"/api/userwall",
      "summary":"Add a post to your wall.",
      "description":"So soon...",
      "fields":[],
      "clientMessage":{},
      "serverMessage":{
        "success":{},
        "errors":[]
      }
    },{
      "verb":"DELETE",
      "name":"/api/userwall",
      "summary":"Delete an your post on wall.",
      "description":"So soon...",
      "fields":[],
      "clientMessage":{},
      "serverMessage":{
        "success":{},
        "errors":[]
      }
    }]
  }]
}
